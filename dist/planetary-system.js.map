{"version":3,"sources":["webpack://PlanetarySystem/webpack/universalModuleDefinition","webpack://PlanetarySystem/webpack/bootstrap","webpack://PlanetarySystem/webpack/runtime/define property getters","webpack://PlanetarySystem/webpack/runtime/hasOwnProperty shorthand","webpack://PlanetarySystem/./src/utils.js","webpack://PlanetarySystem/./src/point.js","webpack://PlanetarySystem/./src/orbit.js","webpack://PlanetarySystem/./src/index.js"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","width","perspective","angle","a","Math","PI","cos","sin","className","$div","document","createElement","clone","object","JSON","parse","stringify","defaults","diameter","orbits","getOrbitAngle","$el","matrix","getComputedStyle","getPropertyValue","values","split","radians","atan2","getBodyAngle","parent","Point","Orbit","$bodiesEl","parentOrbit","parentPoint","getBodyDuration","orbit","durations","animationDuration","push","length","reduce","b","restartBody","$body","style","animation","offsetHeight","setProperty","config","system","level","assign","this","$orbitsEl","cloneNode","map","body","height","size","innerHTML","renderBody","on","translate","points","point","animationPlayState","emit","PlanetarySystem","$scene","camera","canvas","renderOrbits","$parent","appendChild","forEach","renderBodies","events","zoom","max","min","scale","value","x","y","maxWidth","minWidth","classList","add","$orbits","transform","$bodies","resize","w","parentNode","offsetWidth","h","zoomTo","event","handler","index","indexOf","splice","param"],"mappings":"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","file":"planetary-system.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"PlanetarySystem\"] = factory();\n\telse\n\t\troot[\"PlanetarySystem\"] = factory();\n})(self, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","export default {\n\n    getHeight (width, { perspective, angle }) {\n        const a = -angle * Math.PI / 180;\n        const y = width - width * Math.cos(a);\n        const z = width * Math.sin(a);\n        return width - width / 2 - (y - width / 2) * perspective / (perspective - z);\n    },\n\n    createElement (className) {\n        const $div = document.createElement('div');\n        $div.className = className;\n        return $div;\n    },\n\n    clone (object) {\n        return JSON.parse(JSON.stringify(object));\n    }\n\n}\n","import Utils from './utils'\nimport Orbit from './orbit'\n\n\n\n// ----------------------\n// Helpers\n// ----------------------\n\nconst defaults = {\n    angle: 0,\n    diameter: 0,\n    orbits: []\n}\n\n// function getBodyAngle (object) {\n//     let angle = 0;\n//     while (object) {\n//         angle -= object.angle;\n//         object = object.parentOrbit && object.parentOrbit.parentObject;\n//     }\n//     return angle;\n// }\n//\n// function getBodyDuration (orbit) {\n//     let durations = [];\n//     while (orbit) {\n//         orbit.animationDuration && durations.push(orbit.animationDuration);\n//         orbit = orbit.parentObject && orbit.parentObject.parentOrbit;\n//     }\n//     if (!durations.length) return 0;\n//     return 1 / durations.reduce((a, b) => a + 1 / b, 0);\n// }\n\nfunction getOrbitAngle ( $el ) {\n    const matrix = getComputedStyle($el).getPropertyValue('transform');\n    if (!matrix) return 0;\n    const values = matrix.split('(')[1].split(')')[0].split(',');\n    let radians = Math.atan2(values[1], values[0]);\n    if (radians < 0) radians += (2 * Math.PI);\n    return radians * 180 / Math.PI;\n}\n\nfunction getBodyAngle (parent) {\n    let angle = 0;\n    while (parent) {\n        if (parent instanceof Point) angle -= parent.angle;\n        if (parent instanceof Orbit) angle -= getOrbitAngle(parent.$bodiesEl);\n        parent = parent.parentOrbit || parent.parentPoint;\n    }\n    return angle;\n}\n\nfunction getBodyDuration (orbit) {\n    let durations = [];\n    while (orbit) {\n        if (orbit.animationDuration) durations.push(orbit.animationDuration);\n        orbit = orbit.parentPoint && orbit.parentPoint.parentOrbit\n    }\n    if (!durations.length) return 0;\n    return 1 / durations.reduce((a, b) => a + 1 / b, 0);\n}\n\nfunction restartBody (object) {\n    object.$body.style.animation = 'none';\n    object.$body.offsetHeight;\n    object.$body.style.animation = '';\n    object.$body.style.setProperty('--angle', getBodyAngle(object) + 'deg');\n    object.$body.style.setProperty('--duration', getBodyDuration(object.parentOrbit) + 's');\n}\n\n\n\n// ----------------------\n// Exports\n// ----------------------\n\nexport default class Point {\n\n    constructor (config, orbit, system, level) {\n\n        Object.assign(this, defaults, config);\n\n        const $el = Utils.createElement(`ps-point ps-level-${level}`);\n        $el.style.setProperty('--angle', this.angle + 'deg');\n        $el.style.setProperty('--translate', orbit.diameter / 2 + 'px');\n\n        this.$bodiesEl = $el;\n        this.$orbitsEl = $el.cloneNode();\n\n        this.parentOrbit = orbit;\n        this.orbits = this.orbits.map(config => new Orbit(config, this, system, level + 1));\n\n        if (config.body) {\n            this.$body = Utils.createElement('ps-body');\n            this.$body.style.width = this.$body.style.height = config.body.size + 'px';\n            this.$body.innerHTML = system.renderBody(config.body);\n            this.$body.style.setProperty('--duration', getBodyDuration(orbit)  + 's');\n            this.$body.style.setProperty('--angle', getBodyAngle(this) + 'deg');\n            system.on('pause:orbit', orbit => restartBody(this));\n            system.on('play:orbit', orbit =>  restartBody(this));\n        }\n\n    }\n\n    move (translate = this.parentOrbit.diameter / 2) {\n        this.$bodiesEl.style.setProperty('--translate', translate + 'px');\n        this.$orbitsEl.style.setProperty('--translate', translate + 'px');\n    }\n\n    update () {\n        this.$bodiesEl.style.setProperty('--translate', this.parentOrbit.diameter / 2 + 'px');\n        this.$orbitsEl.style.setProperty('--translate', this.parentOrbit.diameter / 2 + 'px');\n    }\n\n}","import Utils from './utils'\nimport Point from './point'\n\n\n\n// ----------------------\n// Helpers\n// ----------------------\n\nconst defaults = {\n    diameter: 0,\n    animationDuration: 0,\n    points: []\n}\n\n\n\nfunction restartAnimation (orbit) {\n    this.$bodiesEl.style.animation = 'none';\n    this.$bodiesEl.offsetHeight;\n    this.$bodiesEl.style.animationDuration = orbit.animationDuration;\n}\n\n\n// ----------------------\n// Exports\n// ----------------------\n\nexport default class Orbit {\n\n    constructor (config, point, system, level) {\n\n        Object.assign(this, defaults, config);\n\n        const $el = Utils.createElement(`ps-orbit ps-level-${level}`);\n        $el.style.width = this.diameter + 'px';\n        $el.style.height = this.diameter + 'px';\n        $el.style.animationDuration = this.animationDuration + 's';\n\n        this.level = level;\n        this.system = system;\n        this.config = { ...config };\n        this.$bodiesEl = $el;\n        this.$orbitsEl = $el.cloneNode();\n\n        this.parentPoint = point;\n        this.points = this.points.map(config => new Point(config, this, system, level));\n\n    }\n\n    setDiameter (diameter) {\n        this.diameter = diameter;\n        this.$bodiesEl.style.width = this.$orbitsEl.style.width = this.diameter + 'px';\n        this.$bodiesEl.style.height = this.$orbitsEl.style.height = this.diameter + 'px';\n    }\n\n    // update () {\n    //     this.$bodiesEl.style.animationDuration = this.animationDuration + 's';\n    //     this.$bodiesEl.style.animationDuration = this.animationDuration + 's';\n    //\n    //     // / this.animationDuration = 0;\n    //     // this.system.emit('pause:orbit', this);\n    // }\n\n\n    pause () {\n        this.$bodiesEl.style.animationPlayState = 'paused'\n        this.$orbitsEl.style.animationPlayState = 'paused'\n        this.animationDuration = 0;\n        this.system.emit('pause:orbit', this);\n    }\n\n    play () {\n        this.$bodiesEl.style.animationPlayState = ''\n        this.$orbitsEl.style.animationPlayState = ''\n        this.animationDuration = this.config.animationDuration;\n        this.system.emit('play:orbit', this);\n    }\n\n}","import './styles.css'\nimport Utils from './utils'\nimport Orbit from './orbit'\n\nexport default class PlanetarySystem {\n\n\n\n    // ----------------------\n    // Constructor\n    // ----------------------\n\n    constructor ($scene, { camera, canvas, renderBody, orbits }) {\n\n\n        // config\n\n        this.events = {};\n        this.camera = camera;\n        this.renderBody = renderBody;\n\n        this.zoom = {};\n        this.zoom.max = 1;\n        this.zoom.min = 1;\n        this.zoom.scale = 1;\n        this.zoom.value = 1;\n\n        this.translate = {};\n        this.translate.x = 0;\n        this.translate.y = 0;\n\n        this.width = {};\n        this.width.max = canvas.maxWidth;\n        this.width.min = canvas.minWidth;\n\n        this.height = {};\n        this.height.max = Utils.getHeight(this.width.max, camera);\n\n\n        // scene\n\n        this.$scene = $scene;\n        this.$scene.classList.add('ps-scene');\n        this.$scene.style.width = this.width.max + 'px';\n        this.$scene.style.height = this.height.max + 'px';\n        this.$scene.style.setProperty('--camera-angle', this.camera.angle + 'deg');\n\n\n        // orbits\n\n        this.$orbits = Utils.createElement('ps-canvas ps-canvas--orbits')\n        this.$orbits.style.transform = `perspective(${camera.perspective}px) translateY(50%) rotateX(${camera.angle}deg) translateY(-50%)`;\n        this.$scene.appendChild(this.$orbits);\n\n\n        // bodies\n\n        this.$bodies = Utils.createElement('ps-canvas ps-canvas--bodies')\n        this.$bodies.style.transform = `perspective(${camera.perspective}px) translateY(50%) rotateX(${camera.angle}deg) translateY(-50%)`;\n        this.$scene.appendChild(this.$bodies);\n\n\n        // renderer\n\n        function renderOrbits ($parent, orbit) {\n            $parent.appendChild(orbit.$orbitsEl);\n            orbit.points.forEach(point => {\n                orbit.$orbitsEl.appendChild(point.$orbitsEl);\n                point.orbits.forEach(orbit => renderOrbits(point.$orbitsEl, orbit));\n            })\n        }\n\n        function renderBodies ($parent, orbit) {\n            $parent.appendChild(orbit.$bodiesEl);\n            orbit.points.forEach(point => {\n                point.$body && point.$bodiesEl.appendChild(point.$body);\n                orbit.$bodiesEl.appendChild(point.$bodiesEl);\n                point.orbits.forEach(orbit => renderBodies(point.$bodiesEl, orbit));\n            })\n        }\n\n        this.orbits = orbits.map(config => {\n            return new Orbit(config, null, this, 0);\n        });\n\n        this.orbits.forEach(orbit => {\n            renderOrbits(this.$orbits, orbit);\n            renderBodies(this.$bodies, orbit);\n        });\n\n\n        // resize\n\n        this.resize();\n\n\n    }\n\n\n\n    // ----------------------\n    // Zoom\n    // ----------------------\n\n    resize () {\n        const w = this.$scene.parentNode.offsetWidth / this.width.max;\n        const h = this.$scene.parentNode.offsetHeight / this.height.max;\n        this.zoom.min = Math.min(w, h, 1);\n        this.zoom.min = Math.max(this.zoom.min, this.width.min / this.width.max);\n        this.zoomTo(100);\n    }\n\n    zoomTo (value) {\n        value = Math.max(value, 100);\n        value = Math.min(value, 100 * this.zoom.max / this.zoom.min);\n        this.zoom.value = value;\n        this.zoom.scale = value * this.zoom.min / 100;\n\n        this.translate.x = (this.$scene.parentNode.offsetWidth - this.width.max * this.zoom.scale) / 2;\n        this.translate.y = (this.$scene.parentNode.offsetHeight - this.height.max * this.zoom.scale) / 2;\n        this.$scene.style.transform = `translate(${this.translate.x}px, ${this.translate.y}px) scale(${this.zoom.scale})`;\n        this.emit('zoom', value);\n    }\n\n    translateTo (x, y) {\n        this.translate.x = x;\n        this.translate.y = y;\n        this.$scene.style.transform = `translate(${this.translate.x}px, ${this.translate.y}px) scale(${this.zoom.scale})`;\n        this.emit('translate', this.translate);\n    }\n\n\n\n    // ----------------------\n    // Events\n    // ----------------------\n\n    on (event, handler) {\n        this.events[event] = this.events[event] || [];\n        this.events[event].push(handler);\n    }\n\n    off (event, handler) {\n        if (!this.events[event]) return;\n        const index = this.events[event].indexOf(handler);\n        if (index > -1) this.events[event].splice(index, 1);\n    }\n\n    emit (event, param) {\n        if (!this.events[event]) return;\n        this.events[event].forEach(handler => handler(param));\n    }\n\n\n\n}"],"sourceRoot":""}